<Page
	x:Class="FluentFeeds.App.WinUI.Views.Pages.FeedPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:vm="using:FluentFeeds.App.Shared.ViewModels.Pages"
	xmlns:items="using:FluentFeeds.App.Shared.Models.Items"
	xmlns:models="using:FluentFeeds.App.Shared.Models"
	mc:Ignorable="d"
	d:DataContext="{d:DesignInstance Type=vm:FeedViewModel}"
	NavigationCacheMode="Required">

	<Page.Resources>
		<GridLength x:Key="ToolbarHeight">50</GridLength>
		<GridLength x:Key="ToolbarSpacing">8</GridLength>
		<x:Double x:Key="ToolbarItemSpacing">3</x:Double>
		<x:Double x:Key="ToolbarItemIconSpacing">8</x:Double>
		<x:Double x:Key="ToolbarItemIconSize">16</x:Double>
		<x:Double x:Key="ToolbarItemProgressRingSize">20</x:Double>
		<Thickness x:Key="ToolbarItemPadding">4,0</Thickness>
		<Thickness x:Key="ToolbarSeparatorMargin">0,8</Thickness>
		<Thickness x:Key="ToolbarPadding">3</Thickness>
		<Thickness x:Key="ToolbarBorderThickness">1,1,0,1</Thickness>
		<CornerRadius x:Key="ToolbarCornerRadius">8,0,0,8</CornerRadius>

		<Thickness x:Key="MainBorderThickness">1,1,0,0</Thickness>
		<CornerRadius x:Key="MainCornerRadius">8,0,0,0</CornerRadius>

		<x:Double x:Key="LeftPaneMaxWidth">325</x:Double>
		<GridLength x:Key="PaneSeparatorWidth">1</GridLength>

		<DataTemplate x:Key="ItemTemplate" x:DataType="items:IItemView">
			<StackPanel Orientation="Vertical" Padding="0,8">
				<Grid ColumnSpacing="8">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>

					<TextBlock
						Grid.Column="0"
						Grid.Row="0"
						Style="{StaticResource CaptionTextBlockStyle}"
						TextTrimming="CharacterEllipsis"
						Foreground="{ThemeResource TextFillColorTertiaryBrush}"
						Text="{Binding DisplayAuthor}" />

					<TextBlock
						Grid.Column="1"
						Grid.Row="0"
						Style="{StaticResource CaptionTextBlockStyle}"
						Foreground="{ThemeResource TextFillColorTertiaryBrush}"
						Text="{Binding PublishedTimestamp, Converter={StaticResource TimestampToStringConverter}}" />
				</Grid>

				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>

					<Ellipse
						Width="6"
						Height="6"
						Fill="{ThemeResource AccentFillColorDefaultBrush}"
						Margin="0,0,8,0"
						VerticalAlignment="Center"
						Visibility="{Binding IsRead, Converter={StaticResource InvertedBoolToVisibilityConverter}}" />

					<TextBlock
						Grid.Column="1"
						FontWeight="SemiBold"
						MaxLines="2"
						TextWrapping="WrapWholeWords"
						TextTrimming="WordEllipsis"
						Text="{Binding Title}" />
				</Grid>

				<TextBlock
					MaxLines="2"
					TextWrapping="WrapWholeWords"
					TextTrimming="WordEllipsis"
					Text="{Binding DisplaySummary}" />
			</StackPanel>
		</DataTemplate>

		<!-- Based on WinUI's AppBarButton style -->
		<Style x:Key="ToolbarButtonStyle" TargetType="Button">
			<Setter Property="Background" Value="{ThemeResource AppBarButtonBackground}" />
			<Setter Property="BorderBrush" Value="{ThemeResource AppBarButtonBorderBrush}" />
			<Setter Property="Foreground" Value="{ThemeResource AppBarButtonForeground}" />
			<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
			<Setter Property="Padding" Value="12,0" />
			<Setter Property="VerticalAlignment" Value="Stretch" />

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<ContentPresenter
							x:Name="ContentPresenter"
							Background="{TemplateBinding Background}"
							Foreground="{TemplateBinding Foreground}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							ContentTransitions="{TemplateBinding ContentTransitions}"
							CornerRadius="{TemplateBinding CornerRadius}"
							Padding="{TemplateBinding Padding}"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">

							<ContentPresenter.BackgroundTransition>
								<BrushTransition Duration="0:0:0.083" />
							</ContentPresenter.BackgroundTransition>

							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="PointerOver">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarButtonBackgroundPointerOver}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarButtonBorderBrushPointerOver}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>

									<VisualState x:Name="Pressed">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarButtonBackgroundPressed}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarButtonBorderBrushPressed}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarButtonForegroundPressed}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>

									<VisualState x:Name="Disabled">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarButtonBackgroundDisabled}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarButtonBorderBrushDisabled}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarButtonForegroundDisabled}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</ContentPresenter>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Page.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="{StaticResource ToolbarHeight}" />
			<RowDefinition Height="{StaticResource ToolbarSpacing}" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<Grid
			x:Name="ToolbarContainer"
			Grid.Row="0"
			Background="{ThemeResource LayerFillColorDefaultBrush}"
			BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
			BorderThickness="{StaticResource ToolbarBorderThickness}"
			CornerRadius="{StaticResource ToolbarCornerRadius}">

			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" MaxWidth="{StaticResource LeftPaneMaxWidth}" />
				<ColumnDefinition Width="{StaticResource PaneSeparatorWidth}" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<Grid
				x:Name="ToolbarLeftPane"
				Grid.Column="0"
				Padding="{StaticResource ToolbarPadding}"
				ColumnSpacing="{StaticResource ToolbarItemSpacing}">
				
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<Button
					Grid.Column="0"
					Style="{StaticResource ToolbarButtonStyle}"
					Command="{x:Bind ViewModel.SyncCommand}">
					
					<StackPanel Orientation="Horizontal" Spacing="{StaticResource ToolbarItemIconSpacing}">
						<Viewbox
							Height="{StaticResource ToolbarItemIconSize}"
							Child="{x:Bind ViewModel.SyncSymbol, Converter={StaticResource SymbolToIconElementConverter}}" />

						<TextBlock Text="{x:Bind ViewModel.SyncLabel}" />
					</StackPanel>

					<Button.KeyboardAccelerators>
						<KeyboardAccelerator Key="R" Modifiers="Control" />
						<KeyboardAccelerator Key="F5" />
					</Button.KeyboardAccelerators>
					
				</Button>

				<ProgressRing
					Grid.Column="1"
					IsActive="{x:Bind ViewModel.IsLoadingItems, Mode=OneWay}"
					Margin="{StaticResource ToolbarItemPadding}"
					Width="{StaticResource ToolbarItemProgressRingSize}"
					Height="{StaticResource ToolbarItemProgressRingSize}" />

				<Button
					Grid.Column="3"
					Style="{StaticResource ToolbarButtonStyle}"
					Command="{x:Bind ViewModel.ToggleReadCommand}"
					Visibility="{x:Bind ViewModel.IsItemSelected, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
					
					<Viewbox
						Height="{StaticResource ToolbarItemIconSize}"
						Child="{x:Bind ViewModel.ToggleReadSymbol, Converter={StaticResource SymbolToIconElementConverter}, Mode=OneWay}" />

					<Button.KeyboardAccelerators>
						<KeyboardAccelerator Key="R" Modifiers="Shift" />
					</Button.KeyboardAccelerators>
					
				</Button>
				
				<Button
					Grid.Column="4"
					Style="{StaticResource ToolbarButtonStyle}"
					Command="{x:Bind ViewModel.DeleteCommand}"
					Visibility="{x:Bind ViewModel.IsItemSelected, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
					
					<Viewbox
						Height="{StaticResource ToolbarItemIconSize}"
						Child="{x:Bind ViewModel.DeleteSymbol, Converter={StaticResource SymbolToIconElementConverter}}" />

					<Button.KeyboardAccelerators>
						<KeyboardAccelerator Key="Delete" />
					</Button.KeyboardAccelerators>

				</Button>

				<Button Grid.Column="5" Style="{StaticResource ToolbarButtonStyle}">
					<Viewbox
						Height="{StaticResource ToolbarItemIconSize}"
						Child="{x:Bind ViewModel.SortModeSymbol, Converter={StaticResource SymbolToIconElementConverter}}" />

					<Button.Flyout>
						<MenuFlyout Placement="BottomEdgeAlignedRight">
							<RadioMenuFlyoutItem
								Text="{x:Bind ViewModel.SortModeNewestLabel}"
								GroupName="SortModes"
								IsChecked="{x:Bind IsSortModeSelected(ViewModel.SelectedSortMode, models:ItemSortMode.Newest), Mode=OneWay}"
								Command="{x:Bind SelectSortModeCommand}">
								
								<RadioMenuFlyoutItem.CommandParameter>
									<models:ItemSortMode>Newest</models:ItemSortMode>
								</RadioMenuFlyoutItem.CommandParameter>
								
							</RadioMenuFlyoutItem>

							<RadioMenuFlyoutItem
								Text="{x:Bind ViewModel.SortModeOldestLabel}"
								GroupName="SortModes"
								IsChecked="{x:Bind IsSortModeSelected(ViewModel.SelectedSortMode, models:ItemSortMode.Oldest), Mode=OneWay}"
								Command="{x:Bind SelectSortModeCommand}">
								
								<RadioMenuFlyoutItem.CommandParameter>
									<models:ItemSortMode>Oldest</models:ItemSortMode>
								</RadioMenuFlyoutItem.CommandParameter>
								
							</RadioMenuFlyoutItem>
						</MenuFlyout>
					</Button.Flyout>
				</Button>
			</Grid>

			<Rectangle
				x:Name="ToolbarSeparator"
				Grid.Column="1"
				Fill="{ThemeResource DividerStrokeColorDefaultBrush}"
				Margin="{StaticResource ToolbarSeparatorMargin}"/>

			<Grid
				x:Name="ToolbarRightPane"
				Grid.Column="2"
				Padding="{StaticResource ToolbarPadding}"
				ColumnSpacing="{StaticResource ToolbarItemSpacing}">

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<Button
					Grid.Column="0"
					Style="{StaticResource ToolbarButtonStyle}"
					Command="{x:Bind ViewModel.ReloadContentCommand}"
					Visibility="{x:Bind ViewModel.IsReloadContentAvailable, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">

					<StackPanel Orientation="Horizontal" Spacing="{StaticResource ToolbarItemIconSpacing}">
						<Viewbox
							Height="{StaticResource ToolbarItemIconSize}"
							Child="{x:Bind ViewModel.ReloadContentSymbol, Converter={StaticResource SymbolToIconElementConverter}}" />

						<TextBlock Text="{x:Bind ViewModel.ReloadContentLabel}" />
					</StackPanel>

					<Button.KeyboardAccelerators>
						<KeyboardAccelerator Key="R" Modifiers="Control,Shift" />
						<KeyboardAccelerator Key="F5" Modifiers="Shift" />
					</Button.KeyboardAccelerators>

				</Button>

				<ProgressRing
					Grid.Column="1"
					IsActive="{x:Bind ViewModel.IsLoadingContent, Mode=OneWay}"
					Margin="{StaticResource ToolbarItemPadding}"
					Width="{StaticResource ToolbarItemProgressRingSize}"
					Height="{StaticResource ToolbarItemProgressRingSize}" />

				<Button Grid.Column="3" Style="{StaticResource ToolbarButtonStyle}">
					<Viewbox
						Height="{StaticResource ToolbarItemIconSize}"
						Child="{x:Bind ViewModel.DisplayOptionsSymbol, Converter={StaticResource SymbolToIconElementConverter}}" />

					<Button.Flyout>
						<MenuFlyout Placement="Bottom">
							<MenuFlyoutSubItem
								Text="{x:Bind ViewModel.DisplayOptions.FontFamilyLabel}"
								Icon="{x:Bind ViewModel.DisplayOptions.FontFamilySymbol, Converter={StaticResource SymbolToIconElementConverter}}">
								
								<RadioMenuFlyoutItem
									Text="{x:Bind ViewModel.DisplayOptions.FontFamilySansSerifLabel}"
									GroupName="FontFamilies"
									IsChecked="{x:Bind IsFontFamilySelected(ViewModel.DisplayOptions.SelectedFontFamily, models:FontFamily.SansSerif), Mode=OneWay}"
									Command="{x:Bind SelectFontFamilyCommand}">

									<RadioMenuFlyoutItem.CommandParameter>
										<models:FontFamily>SansSerif</models:FontFamily>
									</RadioMenuFlyoutItem.CommandParameter>

								</RadioMenuFlyoutItem>
								
								<RadioMenuFlyoutItem
									Text="{x:Bind ViewModel.DisplayOptions.FontFamilySerifLabel}"
									GroupName="FontFamilies"
									IsChecked="{x:Bind IsFontFamilySelected(ViewModel.DisplayOptions.SelectedFontFamily, models:FontFamily.Serif), Mode=OneWay}"
									Command="{x:Bind SelectFontFamilyCommand}">

									<RadioMenuFlyoutItem.CommandParameter>
										<models:FontFamily>Serif</models:FontFamily>
									</RadioMenuFlyoutItem.CommandParameter>

								</RadioMenuFlyoutItem>

								<RadioMenuFlyoutItem
									Text="{x:Bind ViewModel.DisplayOptions.FontFamilyMonospaceLabel}"
									GroupName="FontFamilies"
									IsChecked="{x:Bind IsFontFamilySelected(ViewModel.DisplayOptions.SelectedFontFamily, models:FontFamily.Monospace), Mode=OneWay}"
									Command="{x:Bind SelectFontFamilyCommand}">

									<RadioMenuFlyoutItem.CommandParameter>
										<models:FontFamily>Monospace</models:FontFamily>
									</RadioMenuFlyoutItem.CommandParameter>

								</RadioMenuFlyoutItem>
								
							</MenuFlyoutSubItem>

							<MenuFlyoutItem
								Text="{x:Bind ViewModel.DisplayOptions.IncreaseFontSizeLabel}"
								Icon="{x:Bind ViewModel.DisplayOptions.IncreaseFontSizeSymbol, Converter={StaticResource SymbolToIconElementConverter}}"
								Command="{x:Bind ViewModel.DisplayOptions.IncreaseFontSizeCommand}">

								<MenuFlyoutItem.KeyboardAccelerators>
									<KeyboardAccelerator Key="Add" Modifiers="Control" />
								</MenuFlyoutItem.KeyboardAccelerators>
								
							</MenuFlyoutItem>

							<MenuFlyoutItem
								Text="{x:Bind ViewModel.DisplayOptions.DecreaseFontSizeLabel}"
								Icon="{x:Bind ViewModel.DisplayOptions.DecreaseFontSizeSymbol, Converter={StaticResource SymbolToIconElementConverter}}"
								Command="{x:Bind ViewModel.DisplayOptions.DecreaseFontSizeCommand}">

								<MenuFlyoutItem.KeyboardAccelerators>
									<KeyboardAccelerator Key="Subtract" Modifiers="Control" />
								</MenuFlyoutItem.KeyboardAccelerators>
								
							</MenuFlyoutItem>

							<MenuFlyoutItem
								Text="{x:Bind ViewModel.DisplayOptions.ResetFontSizeLabel}"
								Icon="{x:Bind ViewModel.DisplayOptions.ResetFontSizeSymbol, Converter={StaticResource SymbolToIconElementConverter}}"
								Command="{x:Bind ViewModel.DisplayOptions.ResetFontSizeCommand}">
								
								<MenuFlyoutItem.KeyboardAccelerators>
									<KeyboardAccelerator Key="Number0" Modifiers="Control" />
								</MenuFlyoutItem.KeyboardAccelerators>

							</MenuFlyoutItem>
						</MenuFlyout>
					</Button.Flyout>
				</Button>

				<Button
					Grid.Column="4"
					Style="{StaticResource ToolbarButtonStyle}"
					Command="{x:Bind ViewModel.OpenBrowserCommand}">
					
					<Viewbox
						Height="{StaticResource ToolbarItemIconSize}"
						Child="{x:Bind ViewModel.OpenBrowserSymbol, Converter={StaticResource SymbolToIconElementConverter}}" />
					
				</Button>

			</Grid>

		</Grid>

		<Grid
			x:Name="MainContainer"
			Grid.Row="2"
			Background="{ThemeResource LayerFillColorDefaultBrush}"
			BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
			BorderThickness="{StaticResource MainBorderThickness}"
			CornerRadius="{StaticResource MainCornerRadius}">

			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" MaxWidth="{StaticResource LeftPaneMaxWidth}" />
				<ColumnDefinition Width="{StaticResource PaneSeparatorWidth}" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<ListView
				x:Name="MainItemList"
				Grid.Column="0"
				Padding="0,2"
				SelectionMode="Extended"
				ItemsSource="{x:Bind ViewModel.Items}"
				ItemTemplate="{StaticResource ItemTemplate}"
				SelectionChanged="HandleSelectionChanged" />

			<Rectangle
				x:Name="MainSeparator"
				Grid.Column="1"
				Fill="{ThemeResource DividerStrokeColorDefaultBrush}" />

			<Frame x:Name="MainContentFrame" Grid.Column="2" />

		</Grid>
	</Grid>

</Page>
