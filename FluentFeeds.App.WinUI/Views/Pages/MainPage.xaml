<Page
	x:Class="FluentFeeds.App.WinUI.Views.Pages.MainPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:vm="using:FluentFeeds.App.Shared.ViewModels.Pages"
	xmlns:views="using:FluentFeeds.App.WinUI.Views.Items.Navigation"
	d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
	mc:Ignorable="d">
	
	<Page.Resources>
		<x:Double x:Key="TitleBarIconSize">16</x:Double>
		<x:Double x:Key="TitleBarSearchHeight">32</x:Double>
		<Thickness x:Key="TitleBarSearchMargin">2,0</Thickness>
		<Thickness x:Key="TitleBarTitleMargin">12,0,0,0</Thickness>

		<Thickness x:Key="ErrorBarBorderThickness">1,1,0,1</Thickness>
		<CornerRadius x:Key="ErrorBarCornerRadius">8,0,0,8</CornerRadius>
		
		<DataTemplate
			xmlns:vm="using:FluentFeeds.App.Shared.ViewModels.Items.Navigation"
			x:DataType="vm:NavigationItemViewModel"
			x:Key="NavigationItemTemplate">
					
			<views:NavigationItemView DataContext="{x:Bind}" />
					
		</DataTemplate>
	</Page.Resources>

	<Grid>
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup>
				<!--
					When there is enough space to show the compact navigation bar and the full search field, show the
					title (ensuring that the search field is never bigger than its max width).
				-->
				<VisualState>
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="{x:Bind MinWidthForTitleVisible}" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="TitleBarTitle.Visibility" Value="Visible" />
						<Setter Target="TitleBarAreaLeftColumn.Width" Value="{x:Bind NavigationExpandedGridLength}" />
					</VisualState.Setters>
				</VisualState>
				
				<!--
					When there is enough space to show the expanded navigation bar and the full search field, fill the
					remaining space between the search field and the caption buttons.
				-->
				<VisualState>
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="{x:Bind MinWidthForSearchSpacing}" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="TitleBarTitle.Visibility" Value="Visible" />
						<Setter Target="TitleBarAreaLeftColumn.Width" Value="{x:Bind NavigationExpandedGridLength}" />
						<Setter Target="TitleBarAreaCenterColumn.Width" Value="{x:Bind SearchFieldMaxGridLength}" />
						<Setter Target="TitleBarAreaRightColumn.Width" Value="*" />
					</VisualState.Setters>
				</VisualState>
				
				<!--
					When there is enough space to center the search bar, ensure that the spacing on both sides is
					equal.
				-->
				<VisualState>
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="{x:Bind MinWidthForCenterSearch}" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="TitleBarTitle.Visibility" Value="Visible" />
						<Setter Target="TitleBarAreaLeftColumn.Width" Value="*" />
						<Setter Target="TitleBarAreaCenterColumn.Width" Value="{x:Bind SearchFieldMaxGridLength}" />
						<Setter Target="TitleBarAreaRightColumn.Width" Value="*" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>

		<!-- 
			The title bar is shown above the navigation view but is inset to the width of the compact navigation bar.
			The SizeChanged event is handled for each grid column so any possible layout change gets propagated to the
			title bar helper.
		-->
		<Grid
			x:Name="TitleBar"
			Canvas.ZIndex="1"
			VerticalAlignment="Top"
			Height="{x:Bind TitleBarHeight}">

			<Grid.ColumnDefinitions>
				<ColumnDefinition x:Name="TitleBarAreaLeftColumn" Width="{x:Bind NavigationCompactGridLength}" />
				<ColumnDefinition x:Name="TitleBarAreaCenterColumn" Width="*" />
				<ColumnDefinition x:Name="TitleBarAreaRightColumn" Width="{x:Bind CaptionButtonsGridLength}" />
			</Grid.ColumnDefinitions>

			<StackPanel
				Grid.Column="0"
				Orientation="Horizontal"
				SizeChanged="HandleDragRegionSizeChanged"
				Margin="{x:Bind TitleBarAreaLeftMargin}">
				
				<!-- Inner title container, position is animated when the navigation bar is expanded/collapsed. -->
				<StackPanel
					x:Name="TitleBarTitle"
					Orientation="Horizontal"
					Visibility="Collapsed">

					<StackPanel.Transitions>
						<TransitionCollection>
							<RepositionThemeTransition/>
						</TransitionCollection>
					</StackPanel.Transitions>

					<Image
						Source="/Assets/Square44x44Logo.png"
						Width="{StaticResource TitleBarIconSize}" 
						Height="{StaticResource TitleBarIconSize}"
						VerticalAlignment="Center" />

					<TextBlock 
						Text="{x:Bind ViewModel.Title}" 
						Style="{StaticResource CaptionTextBlockStyle}"
						Margin="{StaticResource TitleBarTitleMargin}"
						VerticalAlignment="Center" />

				</StackPanel>

			</StackPanel>

			<AutoSuggestBox
				Grid.Column="1"
				QueryIcon="Find"
				QuerySubmitted="HandleSearchQuerySubmitted"
				PlaceholderText="{x:Bind ViewModel.SearchPlaceholder}"
				Height="{StaticResource TitleBarSearchHeight}"
				Margin="{StaticResource TitleBarSearchMargin}"
				VerticalAlignment="Center"
				BorderThickness="1"
				SizeChanged="HandleDragRegionSizeChanged"
				Text="{x:Bind ViewModel.SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
				
				<!-- Remove underline. -->
				<AutoSuggestBox.Resources>
					<StaticResource x:Key="TextControlBorderBrush" ResourceKey="ControlElevationBorderBrush" />
					<StaticResource x:Key="TextControlBorderBrushPointerOver" ResourceKey="ControlElevationBorderBrush" />
				</AutoSuggestBox.Resources>
				
			</AutoSuggestBox>

			<StackPanel
				Grid.Column="2"
				SizeChanged="HandleDragRegionSizeChanged" />

		</Grid>

		<NavigationView
			x:Name="NavigationView"
			Canvas.ZIndex="0"
			IsTabStop="False"
			IsTitleBarAutoPaddingEnabled="False"
			CompactModeThresholdWidth="0"
			IsSettingsVisible="False"
			MenuItemTemplate="{StaticResource NavigationItemTemplate}"
			CompactPaneLength="{x:Bind NavigationCompactWidth}"
			OpenPaneLength="{x:Bind NavigationExpandedWidth}"
			MenuItemsSource="{x:Bind ViewModel.FeedItems, Mode=OneWay}"
			FooterMenuItemsSource="{x:Bind ViewModel.FooterItems, Mode=OneWay}"
			SelectedItem="{x:Bind ViewModel.SelectedItem, Mode=TwoWay}">

			<!-- Remove built-in layer for navigation view content. -->
			<NavigationView.Resources>
				<Thickness x:Key="NavigationViewContentGridBorderThickness">0</Thickness>
				<SolidColorBrush x:Key="NavigationViewContentBackground" Color="Transparent" />
			</NavigationView.Resources>

			<Grid Margin="{x:Bind ContentMargin}">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<InfoBar
					x:Name="ErrorBar"
					Grid.Row="0"
					Severity="Error"
					IsOpen="False"
					Closed="HandleErrorBarClosed"
					CornerRadius="{StaticResource ErrorBarCornerRadius}"
					BorderThickness="{StaticResource ErrorBarBorderThickness}"
					IsClosable="True" />

				<Frame 
					x:Name="ContentFrame"
					Grid.Row="1"
					IsNavigationStackEnabled="False" />
			</Grid>

		</NavigationView>
	</Grid>

</Page>
